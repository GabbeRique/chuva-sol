import React, { useEffect, useState } from 'react';
import { View, Text, StyleSheet, Image, ActivityIndicator } from 'react-native';
import axios from 'axios';

export default function App() {
  const [weather, setWeather] = useState(null);
  const [loading, setLoading] = useState(true);

  const API_KEY = '7c83f62e'; // Substitua pela sua chave da HG Brasil
  const WOEID = 455824; // Exemplo: Recife-PE

  useEffect(() => {
    axios.get(`https://api.hgbrasil.com/weather?key=${API_KEY}&woeid=${WOEID}`)
      .then(response => {
        setWeather(response.data.results);
      })
      .catch(error => {
        console.error("Erro ao buscar clima:", error);
      })
      .finally(() => setLoading(false));
  }, []);

  if (loading) {
    return (
      <View style={styles.container}>
        <ActivityIndicator size="large" color="#217CAF" />
        <Text>Carregando...</Text>
      </View>
    );
  }

  if (!weather) {
    return (
      <View style={styles.container}>
        <Text>Não foi possível obter as informações do clima.</Text>
      </View>
    );
  }

  const getStyleByCondition = (condition) => {
    switch (condition) {
      case 'clear_day': return styles.clear_day;
      case 'clear_night': return styles.clear_night;
      case 'cloudly_day':
      case 'fog':
      case 'rain':
      case 'storm': return styles.cloudly_day;
      case 'cloudly_night': return styles.cloudly_night;
      default: return styles.default;
    }
  };

  return (
    <View style={[styles.weatherBox, getStyleByCondition(weather.condition_slug)]}>
      <Text style={styles.city}>{weather.city}</Text>
      <Text style={styles.temp}>{weather.temp}º C</Text>
      <Text>{weather.description}</Text>
      <Text>Nascer do sol: {weather.sunrise}</Text>
      <Text>Pôr do sol: {weather.sunset}</Text>
      <Text>Vento: {weather.wind_speedy}</Text>
      <Image source={{ uri: weather.img_id ? `https://assets.hgbrasil.com/weather/images/${weather.img_id}.png` : weather.image }} style={styles.image} />
    </View>
  );
}

const styles = StyleSheet.create({
  container: {
    flex: 1,
    justifyContent: 'center',
    alignItems: 'center'
  },
  weatherBox: {
    borderRadius: 8,
    padding: 20,
    alignItems: 'center',
  },
  city: {
    fontSize: 20,
    fontWeight: 'bold',
  },
  temp: {
    fontSize: 40,
    fontWeight: 'bold',
  },
  image: {
    width: 100,
    height: 100,
    marginTop: 10
  },
  clear_day: {
    backgroundColor: '#217CAF',
    color: 'white'
  },
  clear_night: {
    backgroundColor: '#555',
    color: 'white'
  },
  cloudly_day: {
    backgroundColor: '#ddd',
    color: 'black'
  },
  cloudly_night: {
    backgroundColor: '#444',
    color: 'white'
  },
  default: {
    backgroundColor: '#ccc',
  }
});
